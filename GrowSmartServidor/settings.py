"""
Django settings for GrowSmartServidor project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import firebase_admin
from firebase_admin import credentials
import os
import json
from pathlib import Path
from dotenv import load_dotenv

#CARGA DE VARIABLES DE ENTORNO
env_path=Path(__file__).resolve().parent.parent / 'KEYS.env'
load_dotenv(dotenv_path=env_path)

#CREDENCIALES SERVIDOR DE CORREO
HOST_MAIL=os.getenv('HOST_MAIL')
HOST_PASSWORD=os.getenv('HOST_PASSWORD')

#RUTA CREDENCIALES DE FIREBASE
FIREBASE_ADMIN_SDK_NAME=os.getenv('FIREBASE_ADMIN_SDK_NAME')


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-wba%^h7hgbx90d-@k8pwm32(^$h^%vgj^%5a^)e@h=ngw6_g6k'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework.authtoken',
    'corsheaders',
    'plants',
    'rest_framework',
    'users',
    'smartpots',
    'fcm_django',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

#FIREBASE CONFIGS

FIREBASE_CREDENTIALS_PATH = os.path.join(BASE_DIR, FIREBASE_ADMIN_SDK_NAME)

if os.path.exists(FIREBASE_CREDENTIALS_PATH):
    with open(FIREBASE_CREDENTIALS_PATH) as f:
        FIREBASE_CREDENTIALS = json.load(f)
else:
    FIREBASE_CREDENTIALS = {}

if not firebase_admin._apps:
    cred = credentials.Certificate(FIREBASE_CREDENTIALS_PATH)
    firebase_admin.initialize_app(cred)

FCM_DJANGO_SETTINGS = {
    "FCM_SERVER_KEY": FIREBASE_CREDENTIALS.get("private_key_id", ""), #PONER CLAVE
    "ONE_DEVICE_PER_USER": False,  # Permite múltiples dispositivos por usuario
    "DELETE_INACTIVE_DEVICES": True,  # Elimina dispositivos inactivos automáticamente
}


#CORS CONFIGS
#La wea del CORS la añadi para probar la app del flutter en el navegador ya que no me dejaba ejecutar la app en celular
CORS_ALLOW_ALL_ORIGINS = True

ROOT_URLCONF = 'GrowSmartServidor.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ],
  #  'DEFAULT_PERMISSION_CLASSES': [
   #     'rest_framework.permissions.IsAuthenticated',
   # ],
    
}

WSGI_APPLICATION = 'GrowSmartServidor.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#ESPACIO PARA CONFIGURACIONES DE CORREO
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = HOST_MAIL
EMAIL_HOST_PASSWORD = HOST_PASSWORD  # Usa variables de entorno para mayor seguridad